{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Woozy\\\\Desktop\\\\Practica\\\\dashboard\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useQuery, useSubscription } from '@apollo/client';\nimport { gql } from 'graphql-tag';\n\n// Consulta GraphQL normal para obtener datos\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_DATA = gql`\n  query GetData {\n    data {\n      id\n      value\n    }\n  }\n`;\n\n// Suscripción GraphQL para recibir actualizaciones en tiempo real\nconst DATA_SUBSCRIPTION = gql`\n  subscription OnDataUpdated {\n    dataUpdated {\n      id\n      value\n    }\n  }\n`;\nconst Dashboard = () => {\n  _s();\n  // Consulta de datos inicial (puede ser para cargar datos al principio)\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_DATA);\n\n  // Suscripción para obtener actualizaciones en tiempo real\n  const {\n    data: subscriptionData,\n    loading: subLoading,\n    error: subError\n  } = useSubscription(DATA_SUBSCRIPTION);\n  useEffect(() => {\n    if (subscriptionData) {\n      console.log('Actualización en tiempo real:', subscriptionData);\n    }\n  }, [subscriptionData]);\n  if (loading || subLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Cargando...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 37\n  }, this);\n  if (error || subError) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", (error === null || error === void 0 ? void 0 : error.message) || (subError === null || subError === void 0 ? void 0 : subError.message)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 33\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Datos iniciales:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data === null || data === void 0 ? void 0 : data.data.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item.value\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Actualizaciones en tiempo real:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: subscriptionData !== null && subscriptionData !== void 0 && subscriptionData.dataUpdated ? /*#__PURE__*/_jsxDEV(\"li\", {\n        children: subscriptionData.dataUpdated.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No hay actualizaciones a\\xFAn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"uzqhhPxEpDAnOhiAj3O4UPTsINo=\", false, function () {\n  return [useQuery, useSubscription];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useQuery","useSubscription","gql","jsxDEV","_jsxDEV","GET_DATA","DATA_SUBSCRIPTION","Dashboard","_s","loading","error","data","subscriptionData","subLoading","subError","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","message","map","item","value","id","dataUpdated","_c","$RefreshReg$"],"sources":["C:/Users/Woozy/Desktop/Practica/dashboard/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useQuery, useSubscription } from '@apollo/client';\r\nimport { gql } from 'graphql-tag';\r\n\r\n// Consulta GraphQL normal para obtener datos\r\nconst GET_DATA = gql`\r\n  query GetData {\r\n    data {\r\n      id\r\n      value\r\n    }\r\n  }\r\n`;\r\n\r\n// Suscripción GraphQL para recibir actualizaciones en tiempo real\r\nconst DATA_SUBSCRIPTION = gql`\r\n  subscription OnDataUpdated {\r\n    dataUpdated {\r\n      id\r\n      value\r\n    }\r\n  }\r\n`;\r\n\r\nconst Dashboard = () => {\r\n  // Consulta de datos inicial (puede ser para cargar datos al principio)\r\n  const { loading, error, data } = useQuery(GET_DATA);\r\n\r\n  // Suscripción para obtener actualizaciones en tiempo real\r\n  const { data: subscriptionData, loading: subLoading, error: subError } = useSubscription(DATA_SUBSCRIPTION);\r\n\r\n  useEffect(() => {\r\n    if (subscriptionData) {\r\n      console.log('Actualización en tiempo real:', subscriptionData);\r\n    }\r\n  }, [subscriptionData]);\r\n\r\n  if (loading || subLoading) return <p>Cargando...</p>;\r\n  if (error || subError) return <p>Error: {error?.message || subError?.message}</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Dashboard</h1>\r\n      <h2>Datos iniciales:</h2>\r\n      <ul>\r\n        {data?.data.map((item) => (\r\n          <li key={item.id}>{item.value}</li>\r\n        ))}\r\n      </ul>\r\n      \r\n      <h2>Actualizaciones en tiempo real:</h2>\r\n      <ul>\r\n        {subscriptionData?.dataUpdated ? (\r\n          <li>{subscriptionData.dataUpdated.value}</li>\r\n        ) : (\r\n          <p>No hay actualizaciones aún</p>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}